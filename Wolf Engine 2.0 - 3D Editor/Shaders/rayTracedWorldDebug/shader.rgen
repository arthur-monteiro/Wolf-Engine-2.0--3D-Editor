#extension GL_EXT_ray_tracing : require
#extension GL_EXT_samplerless_texture_functions : require

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, r32f) uniform image2D image;

layout(location = 0) rayPayloadEXT float hitDistance;

void main() 
{
    const vec2 pixelPos = vec2(gl_LaunchIDEXT.xy);
    const vec2 inUV = pixelPos / vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = getInvViewMatrix() * vec4(0, 0, 0, 1);
    vec4 target = getInvProjectionMatrix() * vec4(d.x, d.y, 1, 1) ;
    vec4 direction = getInvViewMatrix() * vec4(normalize(target.xyz), 0);

    uint rayFlags = gl_RayFlagsOpaqueEXT;
    uint cullMask = 0xff;
    float tmin = 0.001;
    float tmax = 100.0;

    traceRayEXT(topLevelAS, rayFlags, cullMask, 0 /*sbtRecordOffset*/, 0 /*sbtRecordStride*/, 0 /*missIndex*/, origin.xyz, tmin, direction.xyz, tmax, 0 /*payload*/);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(vec3(hitDistance / tmax), 1.0));
}